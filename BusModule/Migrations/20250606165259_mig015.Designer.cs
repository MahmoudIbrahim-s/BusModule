// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusModule.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606165259_mig015")]
    partial class mig015
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusModule.Models.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusRouteId")
                        .HasColumnType("int");

                    b.Property<int>("BusTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fees")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<bool>("IsCapacityRestricted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusCategoryId");

                    b.HasIndex("BusRouteId");

                    b.HasIndex("BusTypeId");

                    b.HasIndex("DriverId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            BusCategoryId = 2,
                            BusNumber = "BUS-101",
                            BusRouteId = 1,
                            BusTypeId = 1,
                            Capacity = 30,
                            DriverId = 10,
                            Fees = 150.00m,
                            IsCapacityRestricted = true
                        });
                });

            modelBuilder.Entity("BusModule.Models.BusAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("StudentId");

                    b.ToTable("BusAssignments");
                });

            modelBuilder.Entity("BusModule.Models.BusCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "One Way"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Two Way"
                        });
                });

            modelBuilder.Entity("BusModule.Models.BusRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("BusRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndPoint = "Area 1",
                            EndTime = new TimeSpan(0, 8, 30, 0, 0),
                            RouteName = "Route A",
                            StartPoint = "School",
                            StartTime = new TimeSpan(0, 7, 30, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            EndPoint = "Area 2",
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            RouteName = "Route B",
                            StartPoint = "School",
                            StartTime = new TimeSpan(0, 7, 45, 0, 0)
                        });
                });

            modelBuilder.Entity("BusModule.Models.BusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kindergarten"
                        });
                });

            modelBuilder.Entity("BusModule.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Ali Ahmed",
                            Grade = "Grade 3"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Salma Ibrahim",
                            Grade = "Grade 4"
                        });
                });

            modelBuilder.Entity("BusModule.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasFilter("[StudentId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@student.com",
                            EmployeeId = 11,
                            Password = "admin123456",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            FullName = "John Doe",
                            Role = "Driver"
                        },
                        new
                        {
                            Id = 11,
                            FullName = "Jane Smith",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BusModule.Models.Bus", b =>
                {
                    b.HasOne("BusModule.Models.BusCategory", "BusCategory")
                        .WithMany("Buses")
                        .HasForeignKey("BusCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusModule.Models.BusRoute", "BusRoute")
                        .WithMany("Buses")
                        .HasForeignKey("BusRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusModule.Models.BusType", "BusType")
                        .WithMany("Buses")
                        .HasForeignKey("BusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employee", "Driver")
                        .WithMany("Buses")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusCategory");

                    b.Navigation("BusRoute");

                    b.Navigation("BusType");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("BusModule.Models.BusAssignment", b =>
                {
                    b.HasOne("BusModule.Models.Bus", "Bus")
                        .WithMany("Assignments")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusModule.Models.Student", "Student")
                        .WithMany("BusAssignments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BusModule.Models.User", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("BusModule.Models.User", "EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BusModule.Models.Student", "Student")
                        .WithOne("User")
                        .HasForeignKey("BusModule.Models.User", "StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BusModule.Models.Bus", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("BusModule.Models.BusCategory", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusModule.Models.BusRoute", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusModule.Models.BusType", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusModule.Models.Student", b =>
                {
                    b.Navigation("BusAssignments");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
